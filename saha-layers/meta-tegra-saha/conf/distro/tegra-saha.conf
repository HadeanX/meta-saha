DISTRO = "tegra-saha"
DISTRO_NAME = "Saha project distro for tegra"
# Based on tegrademo 3.5
DISTRO_VERSION_BASE = "alpha-1.0"
DISTRO_VERSION = "${DISTRO_VERSION_BASE}-${DATE}"
DISTRO_CODENAME = "rolling"
SDK_VENDOR = "-tdsdk"
SDK_VERSION := "${DISTRO_VERSION}"

MAINTAINER = "Homalozoa <nx.tardis@gmail.com>"

TARGET_VENDOR = "-cyberzoo"

# New ${DISTRO}-<version> setting for sanity checks.
# Increment version number (and the corresponding
# setting int the template bblayers.conf.sample file)
# each time the layer settings are changed.
REQUIRED_TD_BBLAYERS_CONF_VERSION = "${DISTRO}-1"

LOCALCONF_VERSION = "1"

DISTRO_VERSION[vardepsexclude] = "DATE"
SDK_VERSION[vardepsexclude] = "DATE"

TD_DEFAULT_DISTRO_FEATURES = "largefile opengl vulkan multiarch systemd pam virtualization"

DISTRO_FEATURES ?= "${DISTRO_FEATURES_DEFAULT} ${TD_DEFAULT_DISTRO_FEATURES}"

# Jetson platforms do not use linux-yocto, but for QEMU testing
# align with the poky distro.
PREFERRED_VERSION_linux-yocto ?= "5.8%"
PREFERRED_VERSION_linux-yocto-rt ?= "5.4%"

SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
SDKPATH = "/opt/${DISTRO}/${SDK_VERSION}"

TCLIBCAPPEND = ""

PREMIRRORS ??= "\
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

SANITY_TESTED_DISTROS ?= " \
            ubuntu-18.04 \n \
            ubuntu-20.04 \n \
            ubuntu-20.10 \n \
            ubuntu-21.04 \n \
            ubuntu-22.04 \n \
            arch \n \
            "

# CUDA 10.2 requires gcc 7 or 8
GCCVERSION:aarch64 = "8.%"
SDKGCCVERSION = "11.%"

# Most NVIDIA-supplied services expect systemd
INIT_MANAGER = "systemd"

INHERIT += "tegra-support-sanity"

require conf/distro/include/no-static-libs.inc
require conf/distro/include/yocto-uninative.inc
require conf/distro/include/security_flags.inc
INHERIT += "uninative"

BB_SIGNATURE_HANDLER ?= "OEEquivHash"
BB_HASHSERVE ??= "auto"

LICENSE_FLAGS_ACCEPTED += "commercial_faad2"

PREFERRED_PROVIDER_virtual/bootlogo_tegra = "bootlogo-custom"

# # Mender additions
# INHERIT += "mender-full distro_layer_buildinfo"
# INHERIT:append:tegra = " tegra-mender-setup mender-workarounds"

# BUILDNAME ?= "${DISTRO_VERSION}-${DISTRO_LAYER_BUILDTAG}"
# BUILDNAME[vardepvalue] = "${DISTRO_VERSION}"

# MENDER_ARTIFACT_NAME ?= "${IMAGE_BASENAME}_${BUILDNAME}"

# IMAGE_FSTYPES:tegra = "tegraflash mender dataimg"
# IMAGE_FSTYPES:pn-tegra-minimal-initramfs:tegra = "${INITRAMFS_FSTYPES}"
# IMAGE_FEATURES:append = " read-only-rootfs"
# IMGCLASSES:append = " rootfs-postcommands-overrides"

# # Reserved space for tegraflash partitions, not including APP and DATA
# TEGRA_FLASH_PARTITIONS_MB ?= "950"

# # Make more room for the data partition, so we can use it to hold
# # docker container filesystems.
# MENDER_DATA_PART_SIZE_MB_DEFAULT:tegra = "3072"

# MENDER_STORAGE_DEVICE_BASE ?= "/dev/mmcblk0p"
# MENDER_STORAGE_TOTAL_SIZE_MB ?= "${@tegra_mender_calc_total_size(d) - int(d.getVar('TEGRA_FLASH_PARTITIONS_MB'))}"